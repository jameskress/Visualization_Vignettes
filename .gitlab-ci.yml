# This GitLab CI/CD configuration file includes three stages:
# 1. build: Compiles the Docker image and pushes it to the GitLab Container Registry.
# 2. test: Runs existing ParaView and VisIt tests.

image: debian:12

stages:          # List of stages for jobs, and their order of execution
  - build
  - test

docker_build:
  stage: build
  # Pinned versions for stability
  image: docker:24.0.5
  services:
    - name: docker:24.0.5-dind
      alias: docker # This alias is important for the DOCKER_HOST variable

  # Variables to ensure a stable connection to the dind service
  variables:
    DOCKER_HOST: tcp://docker:2375
    DOCKER_TLS_CERTDIR: ""
    DOCKER_DRIVER: overlay2

  before_script:
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY

  script:
    # Attempt to pull the latest image to use as a build cache.
    # The '|| true' ensures the job doesn't fail if the image doesn't exist yet.
    - docker pull "$CI_REGISTRY_IMAGE/kaust-viz-app:latest" || true

    # Build the Docker image using the pulled image as a cache
    - docker build
      --cache-from "$CI_REGISTRY_IMAGE/kaust-viz-app:latest"
      --tag "$CI_REGISTRY_IMAGE/kaust-viz-app:latest"
      --tag "$CI_REGISTRY_IMAGE/kaust-viz-app:$CI_COMMIT_REF_SLUG"
      .

    # Push the commit-specific tag on every build
    - docker push "$CI_REGISTRY_IMAGE/kaust-viz-app:$CI_COMMIT_REF_SLUG"

    # ðŸ”„ Only push the 'latest' tag if we are on the default branch
    - |
      if [[ "$CI_COMMIT_BRANCH" == "$CI_DEFAULT_BRANCH" ]]; then
        echo "Pushing latest tag from default branch..."
        docker push "$CI_REGISTRY_IMAGE/kaust-viz-app:latest"
      else
        echo "Not on the default branch. Skipping push of latest tag."
      fi

  # This rule builds on every commit except for tags
  rules:
    - if: $CI_COMMIT_TAG
      when: never
    - when: on_success

paraview-test-job:   # This job runs in the test stage.
  stage: test
  script:
    - echo "Running ParaView Tests"
    - apt update && apt -y install wget make autoconf gfortran libmpich-dev python3-full python3-pip ffmpeg libsm6 libxext6 libgl1-mesa-glx
    - python3 -V
    - python3 -m venv test-venv
    - source test-venv/bin/activate
    - pip3 install pandas matplotlib psutil scipy
    - wget -O paraview.tar.gz  "https://www.paraview.org/paraview-downloads/download.php?submit=Download&version=v5.13&type=binary&os=Linux&downloadFile=ParaView-5.13.1-osmesa-MPI-Linux-Python3.10-x86_64.tar.gz"
    - mkdir paraview
    - tar xf paraview.tar.gz -C paraview --strip-components 1
    - export PARAVIEW_DIR=$PWD/paraview/bin
    - $PARAVIEW_DIR/pvbatch --version
    - echo "$PWD"
    - ls
    - export PARAVIEW_PATH=$PARAVIEW_DIR
    - REPO_DIR=$PWD
    - cd Testing
    - set +e
    - python3 test_suite.py $REPO_DIR/ --test_type ParaView --paraview_version 5.13.1 --non_gpu_machine || exit $?
    - set -e
    - echo "ParaView tests complete"
  artifacts:
    untracked: false
    when: on_success
    access: all
    expire_in: 30 days
    paths:
      - "ParaView_Vignettes/*/Testing/*.json"
      - "ParaView_Vignettes/*/Testing/*.log"
      - "Testing/*.json"

visit-test-job:
  stage: test
  script:
    - echo "Running VisIt Tests"
    - apt update && apt -y install wget make autoconf gfortran libmpich-dev python3-full python3-pip ffmpeg libsm6 libxext6 curl zip unzip libgl1-mesa-glx
    - python3 -V
    - python3 -m venv test-venv
    - source test-venv/bin/activate
    - pip3 install pandas matplotlib psutil scipy
    - wget -O visit.tar.gz  "https://github.com/visit-dav/visit/releases/download/v3.4.1/visit3_4_1.linux-x86_64-ubuntu22.tar.gz"
    - mkdir visit
    - tar xf visit.tar.gz -C visit --strip-components 1
    - export VISIT_DIR=$PWD/visit/bin
    - $VISIT_DIR/visit -version
    - echo "$PWD"
    - ls
    - export VISIT_PATH=$VISIT_DIR
    - REPO_DIR=$PWD
    - cd Testing
    - set +e
    - python3 test_suite.py $REPO_DIR/ --test_type VisIt --visit_version 3.4.1 --test_number 0 1 2 3 4 5 || exit $?
    - set -e
    - echo "VisIt tests complete"
  artifacts:
    untracked: false
    when: on_success
    access: all
    expire_in: 30 days
    paths:
      - "VisIt_Vignettes/*/Testing/*.json"
      - "VisIt_Vignettes/*/Testing/*.log"
      - "Testing/*.json"

