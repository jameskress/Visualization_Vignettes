# This file is a template, and might need editing before it works on your project.
# This is a sample GitLab CI/CD configuration file that should run without any modifications.
# It demonstrates a basic 3 stage CI/CD pipeline. Instead of real tests or scripts,
# it uses echo commands to simulate the pipeline execution.
#
# A pipeline is composed of independent jobs that run scripts, grouped into stages.
# Stages run in sequential order, but jobs within stages run in parallel.
#
# For more information, see: https://docs.gitlab.com/ee/ci/yaml/index.html#stages
#
# You can copy and paste this template into a new `.gitlab-ci.yml` file.
# You should not add this template to an existing `.gitlab-ci.yml` file by using the `include:` keyword.
#
# To contribute improvements to CI/CD templates, please follow the Development guide at:
# https://docs.gitlab.com/ee/development/cicd/templates.html
# This specific template is located at:
# https://gitlab.com/gitlab-org/gitlab/-/blob/master/lib/gitlab/ci/templates/Getting-Started.gitlab-ci.yml

image: debian

stages:          # List of stages for jobs, and their order of execution
  - test

paraview-test-job:   # This job runs in the test stage.
  stage: test    # It only starts when the job in the build stage completes successfully.
  script:
    - echo "Running ParaView Tests"
    - apt update && apt -y install wget make autoconf gfortran libmpich-dev python3-full python3-pip ffmpeg libsm6 libxext6 libgl1-mesa-glx
    - python3 -V
    - python3 -m venv test-venv
    - source test-venv/bin/activate
    - pip3 install pandas matplotlib psutil scipy
    - wget -O paraview.tar.gz  "https://www.paraview.org/paraview-downloads/download.php?submit=Download&version=v5.13&type=binary&os=Linux&downloadFile=ParaView-5.13.1-osmesa-MPI-Linux-Python3.10-x86_64.tar.gz"
    - mkdir paraview
    - tar xf paraview.tar.gz -C paraview --strip-components 1
    - export PARAVIEW_DIR=$PWD/paraview/bin
    - $PARAVIEW_DIR/pvbatch --version
    - echo "$PWD"
    - ls
    - export PARAVIEW_PATH=$PARAVIEW_DIR
    - REPO_DIR=$PWD
    - cd Testing
    - set +e
    - python3 test_suite.py $REPO_DIR/ --test_type ParaView --paraview_version 5.13.1 --non_gpu_machine || exit $?
    - set -e
    - echo "ParaView tests complete"
  artifacts:
    untracked: false
    when: on_success
    access: all
    expire_in: 30 days
    paths:
      - "ParaView_Vignettes/*/Testing/*.json"
      - "ParaView_Vignettes/*/Testing/*.log"
      - "Testing/*.json"

visit-test-job:
  stage: test
  script:
    - echo "Running VisIt Tests"
    - apt update && apt -y install wget make autoconf gfortran libmpich-dev python3-full python3-pip ffmpeg libsm6 libxext6 curl zip unzip libgl1-mesa-glx
    - python3 -V
    - python3 -m venv test-venv
    - source test-venv/bin/activate
    - pip3 install pandas matplotlib psutil scipy
    - wget -O visit.tar.gz  "https://github.com/visit-dav/visit/releases/download/v3.4.1/visit3_4_1.linux-x86_64-ubuntu22.tar.gz"
    - mkdir visit
    - tar xf visit.tar.gz -C visit --strip-components 1
    - export VISIT_DIR=$PWD/visit/bin
    - $VISIT_DIR/visit -version
    - echo "$PWD"
    - ls
    - export VISIT_PATH=$VISIT_DIR
    - REPO_DIR=$PWD
    - cd Testing
    - set +e
    - python3 test_suite.py $REPO_DIR/ --test_type VisIt --visit_version 3.4.1 --test_number 0 1 2 3 4 5 || exit $?
    - set -e
    - echo "VisIt tests complete"
  artifacts:
    untracked: false
    when: on_success
    access: all
    expire_in: 30 days
    paths:
      - "VisIt_Vignettes/*/Testing/*.json"
      - "VisIt_Vignettes/*/Testing/*.log"
      - "Testing/*.json"
