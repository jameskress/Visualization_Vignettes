#
# KAUST Visualization Vignettes
#
# Author: James Kress, <james.kress@kaust.edu.sa>
# Copyright KAUST
#
import os
import sys
import pathlib
import paraview
import subprocess
from paraview.simple import *
paraview.compatibility.major = 5
paraview.compatibility.minor = 10

print("Running ParaView example script: ", sys.argv[0], "\n")

# Get directory of this script
script_dir = os.path.abspath( os.path.dirname( __file__ ) )
print("Running script from: ",  script_dir )

# state file generated using paraview version 5.11.1
import paraview
paraview.compatibility.major = 5
paraview.compatibility.minor = 11

#### import the simple module from the paraview
from paraview.simple import *
#### disable automatic camera reset on 'Show'
paraview.simple._DisableFirstRenderCameraReset()

# ----------------------------------------------------------------
# setup views used in the visualization
# ----------------------------------------------------------------

# Create a new 'Light'
light1 = CreateLight()
light1.Coords = 'Ambient'
light1.Intensity = 0.1
light1.Position = [248.55156387541595, 201.70562521648787, 1009.0110025122272]

# get the material library
materialLibrary1 = GetMaterialLibrary()

# create light
# Create a new 'Render View'
renderView1 = CreateView('RenderView')
renderView1.ViewSize = [2534, 1482]
renderView1.AxesGrid = 'GridAxes3DActor'
renderView1.CenterOfRotation = [1120.0, 752.5, 356.0]
renderView1.StereoType = 'Crystal Eyes'
renderView1.CameraPosition = [-228.06798074519315, -1847.8484771027963, 1348.314494938655]
renderView1.CameraFocalPoint = [1040.2591926012767, 578.8034414243264, 78.20786760918219]
renderView1.CameraViewUp = [0.1913223518502496, 0.3748028687276557, 0.9071485916188202]
renderView1.CameraFocalDisk = 1.0
renderView1.CameraParallelScale = 1674.5879612609185
renderView1.UseColorPaletteForBackground = 0
renderView1.BackgroundColorMode = 'Gradient'
renderView1.BackEnd = 'OSPRay raycaster'
renderView1.AdditionalLights = light1
renderView1.OSPRayMaterialLibrary = materialLibrary1

SetActiveView(None)

# ----------------------------------------------------------------
# setup view layouts
# ----------------------------------------------------------------

# create new layout object 'Layout #1'
layout1 = CreateLayout(name='Layout #1')
layout1.AssignView(0, renderView1)
layout1.SetSize(2534, 1482)

# ----------------------------------------------------------------
# restore active view
SetActiveView(renderView1)
# ----------------------------------------------------------------

# ----------------------------------------------------------------
# setup the data processing pipelines
# ----------------------------------------------------------------

# create a new 'VisItSiloReader'
currentRainfallsilo = VisItSiloReader(registrationName='currentRainfall.silo', FileName=[script_dir + '/../../data/currentRainfall.silo'])
currentRainfallsilo.MeshStatus = ['mesh']
currentRainfallsilo.PointArrayStatus = ['calculatedRain']

# create a new 'XML MultiBlock Data Reader'
cyclonechapala20151102_000000mbvtm = XMLMultiBlockDataReader(registrationName='cyclone-chapala-2015-11-02_00-00-00-mb.vtm', FileName=[script_dir + '/../../data/cyclone-chapala-2015-11-02_00-00-00-mb.vtm'])
cyclonechapala20151102_000000mbvtm.PointArrayStatus = ['HGT', 'QCLOUD', 'QGRAUP', 'QICE', 'QRAIN', 'QVAPOR', 'RAINC', 'RAINNC', 'U', 'U10', 'V', 'V10', 'W']
cyclonechapala20151102_000000mbvtm.TimeArray = 'None'

# create a new 'Slice'
slice4 = Slice(registrationName='Slice4', Input=cyclonechapala20151102_000000mbvtm)
slice4.SliceType = 'Plane'
slice4.HyperTreeGridSlicer = 'Plane'
slice4.SliceOffsetValues = [0.0]

# init the 'Plane' selected for 'SliceType'
slice4.SliceType.Origin = [1120.0, 752.5, 1e-05]
slice4.SliceType.Normal = [0.0, 0.0, 1.0]

# init the 'Plane' selected for 'HyperTreeGridSlicer'
slice4.HyperTreeGridSlicer.Origin = [1120.0, 752.5, 44.5]

# create a new 'Warp By Scalar'
warpByScalar1 = WarpByScalar(registrationName='WarpByScalar1', Input=slice4)
warpByScalar1.Scalars = ['POINTS', 'HGT']
warpByScalar1.ScaleFactor = 0.026

# create a new 'Transform'
staticgeometry = Transform(registrationName='Static geometry', Input=warpByScalar1)
staticgeometry.Transform = 'Transform'

# init the 'Transform' selected for 'Transform'
staticgeometry.Transform.Translate = [0.0, 0.0, -1.0]

# create a new 'Transform'
transform1 = Transform(registrationName='Transform1', Input=cyclonechapala20151102_000000mbvtm)
transform1.Transform = 'Transform'

# init the 'Transform' selected for 'Transform'
transform1.Transform.Scale = [1.0, 1.0, 8.0]

# create a new 'Threshold'
thresholdqvapor = Threshold(registrationName='Threshold qvapor', Input=transform1)
thresholdqvapor.Scalars = ['POINTS', '']
thresholdqvapor.LowerThreshold = 0.018
thresholdqvapor.UpperThreshold = 0.024949532002210617

# create a new 'Resample To Image'
resampleToImageqrain = ResampleToImage(registrationName='ResampleToImage qrain', Input=transform1)
resampleToImageqrain.SamplingDimensions = [2240, 1505, 90]
resampleToImageqrain.SamplingBounds = [0.0, 2240.0, 0.0, 1505.0, 0.0, 712.0]

# create a new 'Slice'
yslice = Slice(registrationName='Y-slice', Input=transform1)
yslice.SliceType = 'Plane'
yslice.HyperTreeGridSlicer = 'Plane'
yslice.SliceOffsetValues = [0.0]

# init the 'Plane' selected for 'SliceType'
yslice.SliceType.Origin = [1120.0, 1505.0, 44.5]
yslice.SliceType.Normal = [0.0, 1.0, 0.0]

# init the 'Plane' selected for 'HyperTreeGridSlicer'
yslice.HyperTreeGridSlicer.Origin = [1120.0, 752.5, 44.5]

# create a new 'Calculator'
calculator1 = Calculator(registrationName='Calculator1', Input=transform1)
calculator1.ResultArrayName = 'wrf_vec'
calculator1.Function = 'U10*iHat + V10*jHat'

# create a new 'Slice'
xslice = Slice(registrationName='X-slice', Input=transform1)
xslice.SliceType = 'Plane'
xslice.HyperTreeGridSlicer = 'Plane'
xslice.SliceOffsetValues = [0.0]

# init the 'Plane' selected for 'SliceType'
xslice.SliceType.Origin = [2239.0, 1505.0, 222.5]

# init the 'Plane' selected for 'HyperTreeGridSlicer'
xslice.HyperTreeGridSlicer.Origin = [1120.0, 752.5, 44.5]

# create a new 'Threshold'
thresholdSurfaceRain = Threshold(registrationName='Threshold Surface Rain', Input=currentRainfallsilo)
thresholdSurfaceRain.Scalars = ['POINTS', 'calculatedRain']
thresholdSurfaceRain.LowerThreshold = 0.01
thresholdSurfaceRain.UpperThreshold = 45.67487541503906
thresholdSurfaceRain.UseContinuousCellRange = 1

# create a new 'Transform'
transform3 = Transform(registrationName='Transform3', Input=thresholdSurfaceRain)
transform3.Transform = 'Transform'

# init the 'Transform' selected for 'Transform'
transform3.Transform.Translate = [0.0, 0.0, 1.0]

# create a new 'Resample To Image'
resampleToImageqice = ResampleToImage(registrationName='ResampleToImage qice', Input=transform1)
resampleToImageqice.SamplingDimensions = [2240, 1505, 90]
resampleToImageqice.SamplingBounds = [0.0, 2240.0, 0.0, 1505.0, 0.0, 712.0]

# create a new 'Extract Subset'
extractSubset1surfacelic = ExtractSubset(registrationName='ExtractSubset1 surface lic', Input=calculator1)
extractSubset1surfacelic.VOI = [0, 2240, 0, 1505, 0, 0]

# create a new 'Glyph'
glyph1 = Glyph(registrationName='Glyph1', Input=extractSubset1surfacelic,
    GlyphType='Arrow')
glyph1.OrientationArray = ['POINTS', 'wrf_vec']
glyph1.ScaleArray = ['POINTS', 'No scale array']
glyph1.ScaleFactor = 73.92
glyph1.GlyphTransform = 'Transform2'
glyph1.GlyphMode = 'Every Nth Point'
glyph1.MaximumNumberOfSamplePoints = 500
glyph1.Stride = 10000

# create a new 'Transform'
transform2 = Transform(registrationName='Transform2', Input=glyph1)
transform2.Transform = 'Transform'

# init the 'Transform' selected for 'Transform'
transform2.Transform.Translate = [0.0, 0.0, 25.0]

# ----------------------------------------------------------------
# setup the visualization in view 'renderView1'
# ----------------------------------------------------------------

# show data from yslice
ysliceDisplay = Show(yslice, renderView1, 'GeometryRepresentation')

# get 2D transfer function for 'Separate_8645_QVAPOR'
separate_8645_QVAPORTF2D = GetTransferFunction2D('Separate_8645_QVAPOR')

# get separate color transfer function/color map for 'QVAPOR'
separate_ysliceDisplay_QVAPORLUT = GetColorTransferFunction('QVAPOR', ysliceDisplay, separate=True)
separate_ysliceDisplay_QVAPORLUT.TransferFunction2D = separate_8645_QVAPORTF2D
separate_ysliceDisplay_QVAPORLUT.RGBPoints = [9.986473453738043e-11, 0.050383, 0.029803, 0.527975, 8.183833798429958e-05, 0.063536, 0.028426, 0.533124, 0.0001636557096484542, 0.075353, 0.027206, 0.538007, 0.00024549394776801923, 0.086222, 0.026125, 0.542658, 0.00032731131943217385, 0.096379, 0.025165, 0.547103, 0.0004091495575517389, 0.10598, 0.024309, 0.551368, 0.0004909669292158936, 0.115124, 0.023556, 0.555468, 0.0005728051673354585, 0.123903, 0.022878, 0.559423, 0.0006546434054550236, 0.132381, 0.022258, 0.56325, 0.0007364607771191782, 0.140603, 0.021687, 0.566959, 0.0008182990152387433, 0.148607, 0.021154, 0.570562, 0.0009001163869028979, 0.156421, 0.020651, 0.574065, 0.000981954625022463, 0.16407, 0.020171, 0.577478, 0.0010637719966866176, 0.171574, 0.019706, 0.580806, 0.0011456102348061826, 0.17895, 0.019252, 0.584054, 0.0012274484729257477, 0.186213, 0.018803, 0.587228, 0.0013092658445899021, 0.193374, 0.018354, 0.59033, 0.0013911040827094675, 0.200445, 0.017902, 0.593364, 0.001472921454373622, 0.207435, 0.017442, 0.596333, 0.001554759692493187, 0.21435, 0.016973, 0.599239, 0.0016365770641573417, 0.221197, 0.016497, 0.602083, 0.0017184153022769067, 0.227983, 0.016007, 0.604867, 0.0018002535403964719, 0.234715, 0.015502, 0.607592, 0.0018820709120606263, 0.241396, 0.014979, 0.610259, 0.0019639091501801914, 0.248032, 0.014439, 0.612868, 0.0020457265218443463, 0.254627, 0.013882, 0.615419, 0.002127564759963911, 0.261183, 0.013308, 0.617911, 0.002209382131628066, 0.267703, 0.012716, 0.620346, 0.0022912203697476306, 0.274191, 0.012109, 0.622722, 0.0023730377414117854, 0.280648, 0.011488, 0.625038, 0.0024548759795313506, 0.287076, 0.010855, 0.627295, 0.0025367142176509153, 0.293478, 0.010213, 0.62949, 0.0026185315893150697, 0.299855, 0.009561, 0.631624, 0.002700369827434635, 0.30621, 0.008902, 0.633694, 0.0027821871990987897, 0.312543, 0.008239, 0.6357, 0.0028640254372183545, 0.318856, 0.007576, 0.63764, 0.0029458428088825093, 0.32515, 0.006915, 0.639512, 0.0030276810470020745, 0.331426, 0.006261, 0.641316, 0.0031095192851216397, 0.337683, 0.005618, 0.643049, 0.003191336656785794, 0.343925, 0.004991, 0.64471, 0.0032731748949053592, 0.35015, 0.004382, 0.646298, 0.003354992266569514, 0.356359, 0.003798, 0.64781, 0.003436830504689079, 0.362553, 0.003243, 0.649245, 0.0035186478763532337, 0.368733, 0.002724, 0.650601, 0.003600486114472799, 0.374897, 0.002245, 0.651876, 0.003682324352592363, 0.381047, 0.001814, 0.653068, 0.003764141724256518, 0.387183, 0.001434, 0.654177, 0.003845979962376083, 0.393304, 0.001114, 0.655199, 0.003927797334040238, 0.399411, 0.000859, 0.656133, 0.004009635572159803, 0.405503, 0.000678, 0.656977, 0.004091452943823958, 0.41158, 0.000577, 0.65773, 0.004173291181943523, 0.417642, 0.000564, 0.65839, 0.0042551294200630875, 0.423689, 0.000646, 0.658956, 0.004336946791727242, 0.429719, 0.000831, 0.659425, 0.004418785029846807, 0.435734, 0.001127, 0.659797, 0.004500602401510962, 0.441732, 0.00154, 0.660069, 0.004582440639630527, 0.447714, 0.00208, 0.66024, 0.0046642580112946815, 0.453677, 0.002755, 0.66031, 0.004746096249414246, 0.459623, 0.003574, 0.660277, 0.004827934487533812, 0.46555, 0.004545, 0.660139, 0.004909751859197967, 0.471457, 0.005678, 0.659897, 0.004991590097317531, 0.477344, 0.00698, 0.659549, 0.005073407468981685, 0.48321, 0.00846, 0.659095, 0.005155245707101251, 0.489055, 0.010127, 0.658534, 0.005237063078765405, 0.494877, 0.01199, 0.657865, 0.005318901316884971, 0.500678, 0.014055, 0.657088, 0.005400739555004535, 0.506454, 0.016333, 0.656202, 0.00548255692666869, 0.512206, 0.018833, 0.655209, 0.005564395164788255, 0.517933, 0.021563, 0.654109, 0.00564621253645241, 0.523633, 0.024532, 0.652901, 0.005728050774571974, 0.529306, 0.027747, 0.651586, 0.005809868146236129, 0.534952, 0.031217, 0.650165, 0.005891706384355695, 0.54057, 0.03495, 0.64864, 0.00597354462247526, 0.546157, 0.038954, 0.64701, 0.0060553619941394144, 0.551715, 0.043136, 0.645277, 0.006137200232258979, 0.557243, 0.047331, 0.643443, 0.006219017603923134, 0.562738, 0.051545, 0.641509, 0.006300855842042699, 0.568201, 0.055778, 0.639477, 0.006382673213706854, 0.573632, 0.060028, 0.637349, 0.006464511451826419, 0.579029, 0.064296, 0.635126, 0.006546328823490573, 0.584391, 0.068579, 0.632812, 0.006628167061610139, 0.589719, 0.072878, 0.630408, 0.0067100052997297035, 0.595011, 0.07719, 0.627917, 0.006791822671393858, 0.600266, 0.081516, 0.625342, 0.006873660909513423, 0.605485, 0.085854, 0.622686, 0.006955478281177578, 0.610667, 0.090204, 0.619951, 0.0070373165192971435, 0.615812, 0.094564, 0.61714, 0.007119133890961297, 0.620919, 0.098934, 0.614257, 0.007200972129080863, 0.625987, 0.103312, 0.611305, 0.007282810367200428, 0.631017, 0.107699, 0.608287, 0.007364627738864582, 0.636008, 0.112092, 0.605205, 0.0074464659769841466, 0.640959, 0.116492, 0.602065, 0.007528283348648301, 0.645872, 0.120898, 0.598867, 0.007610121586767866, 0.650746, 0.125309, 0.595617, 0.007691938958432021, 0.65558, 0.129725, 0.592317, 0.007773777196551587, 0.660374, 0.134144, 0.588971, 0.007855615434671151, 0.665129, 0.138566, 0.585582, 0.007937432806335307, 0.669845, 0.142992, 0.582154, 0.008019271044454872, 0.674522, 0.147419, 0.578688, 0.008101088416119026, 0.67916, 0.151848, 0.575189, 0.00818292665423859, 0.683758, 0.156278, 0.57166, 0.008264744025902744, 0.688318, 0.160709, 0.568103, 0.008346582264022311, 0.69284, 0.165141, 0.564522, 0.008428420502141876, 0.697324, 0.169573, 0.560919, 0.00851023787380603, 0.701769, 0.174005, 0.557296, 0.008592076111925594, 0.706178, 0.178437, 0.553657, 0.00867389348358975, 0.710549, 0.182868, 0.550004, 0.008755731721709315, 0.714883, 0.187299, 0.546338, 0.008837549093373469, 0.719181, 0.191729, 0.542663, 0.008919387331493035, 0.723444, 0.196158, 0.538981, 0.0090012255696126, 0.72767, 0.200586, 0.535293, 0.009083042941276754, 0.731862, 0.205013, 0.531601, 0.009164881179396319, 0.736019, 0.209439, 0.527908, 0.009246698551060474, 0.740143, 0.213864, 0.524216, 0.00932853678918004, 0.744232, 0.218288, 0.520524, 0.009410354160844193, 0.748289, 0.222711, 0.516834, 0.009492192398963758, 0.752312, 0.227133, 0.513149, 0.009574030637083324, 0.756304, 0.231555, 0.509468, 0.009655848008747478, 0.760264, 0.235976, 0.505794, 0.009737686246867043, 0.764193, 0.240396, 0.502126, 0.009819503618531199, 0.76809, 0.244817, 0.498465, 0.009901341856650763, 0.771958, 0.249237, 0.494813, 0.009983159228314917, 0.775796, 0.253658, 0.491171, 0.010064997466434482, 0.779604, 0.258078, 0.487539, 0.010146835704554049, 0.783383, 0.2625, 0.483918, 0.010228653076218203, 0.787133, 0.266922, 0.480307, 0.010310491314337767, 0.790855, 0.271345, 0.476706, 0.010392308686001923, 0.794549, 0.27577, 0.473117, 0.010474146924121486, 0.798216, 0.280197, 0.469538, 0.010555964295785644, 0.801855, 0.284626, 0.465971, 0.010637802533905208, 0.805467, 0.289057, 0.462415, 0.01071961990556936, 0.809052, 0.293491, 0.45887, 0.010801458143688925, 0.812612, 0.297928, 0.455338, 0.01088329638180849, 0.816144, 0.302368, 0.451816, 0.010965113753472646, 0.819651, 0.306812, 0.448306, 0.01104695199159221, 0.823132, 0.311261, 0.444806, 0.011128769363256364, 0.826588, 0.315714, 0.441316, 0.01121060760137593, 0.830018, 0.320172, 0.437836, 0.011292424973040085, 0.833422, 0.324635, 0.434366, 0.01137426321115965, 0.836801, 0.329105, 0.430905, 0.011456101449279214, 0.840155, 0.33358, 0.427455, 0.01153791882094337, 0.843484, 0.338062, 0.424013, 0.011619757059062935, 0.846788, 0.342551, 0.420579, 0.011701574430727089, 0.850066, 0.347048, 0.417153, 0.011783412668846655, 0.853319, 0.351553, 0.413734, 0.01186523004051081, 0.856547, 0.356066, 0.410322, 0.011947068278630374, 0.85975, 0.360588, 0.406917, 0.012028906516749939, 0.862927, 0.365119, 0.403519, 0.012110723888414094, 0.866078, 0.36966, 0.400126, 0.012192562126533659, 0.869203, 0.374212, 0.396738, 0.012274379498197813, 0.872303, 0.378774, 0.393355, 0.01235621773631738, 0.875376, 0.383347, 0.389976, 0.012438035107981534, 0.878423, 0.387932, 0.3866, 0.012519873346101098, 0.881443, 0.392529, 0.383229, 0.012601711584220663, 0.884436, 0.397139, 0.37986, 0.012683528955884819, 0.887402, 0.401762, 0.376494, 0.012765367194004383, 0.89034, 0.406398, 0.37313, 0.012847184565668537, 0.89325, 0.411048, 0.369768, 0.012929022803788104, 0.896131, 0.415712, 0.366407, 0.013010840175452258, 0.898984, 0.420392, 0.363047, 0.013092678413571823, 0.901807, 0.425087, 0.359688, 0.013174516651691387, 0.904601, 0.429797, 0.356329, 0.013256334023355543, 0.907365, 0.434524, 0.35297, 0.013338172261475108, 0.910098, 0.439268, 0.34961, 0.013419989633139262, 0.9128, 0.444029, 0.346251, 0.013501827871258828, 0.915471, 0.448807, 0.34289, 0.013583645242922982, 0.918109, 0.453603, 0.339529, 0.013665483481042547, 0.920714, 0.458417, 0.336166, 0.013747321719162112, 0.923287, 0.463251, 0.332801, 0.013829139090826267, 0.925825, 0.468103, 0.329435, 0.013910977328945832, 0.928329, 0.472975, 0.326067, 0.013992794700609986, 0.930798, 0.477867, 0.322697, 0.014074632938729553, 0.933232, 0.48278, 0.319325, 0.014156450310393707, 0.93563, 0.487712, 0.315952, 0.014238288548513271, 0.93799, 0.492667, 0.312575, 0.014320126786632834, 0.940313, 0.497642, 0.309197, 0.014401944158296992, 0.942598, 0.502639, 0.305816, 0.014483782396416556, 0.944844, 0.507658, 0.302433, 0.014565599768080709, 0.947051, 0.512699, 0.299049, 0.014647438006200273, 0.949217, 0.517763, 0.295662, 0.014729255377864429, 0.951344, 0.52285, 0.292275, 0.014811093615983994, 0.953428, 0.52796, 0.288883, 0.014892910987648151, 0.95547, 0.533093, 0.28549, 0.014974749225767716, 0.957469, 0.53825, 0.282096, 0.015056587463887279, 0.959424, 0.543431, 0.278701, 0.015138404835551433, 0.961336, 0.548636, 0.275305, 0.015220243073670998, 0.963203, 0.553865, 0.271909, 0.015302060445335153, 0.965024, 0.559118, 0.268513, 0.015383898683454718, 0.966798, 0.564396, 0.265118, 0.015465716055118872, 0.968526, 0.5697, 0.261721, 0.015547554293238439, 0.970205, 0.575028, 0.258325, 0.015629392531358005, 0.971835, 0.580382, 0.254931, 0.015711209903022157, 0.973416, 0.585761, 0.25154, 0.015793048141141724, 0.974947, 0.591165, 0.248151, 0.01587486551280588, 0.976428, 0.596595, 0.244767, 0.015956703750925443, 0.977856, 0.602051, 0.241387, 0.016038521122589595, 0.979233, 0.607532, 0.238013, 0.016120359360709165, 0.980556, 0.613039, 0.234646, 0.016202197598828728, 0.981826, 0.618572, 0.231287, 0.016284014970492883, 0.983041, 0.624131, 0.227937, 0.016365853208612446, 0.984199, 0.629718, 0.224595, 0.016447670580276602, 0.985301, 0.63533, 0.221265, 0.01652950881839617, 0.986345, 0.640969, 0.217948, 0.01661132619006032, 0.987332, 0.646633, 0.214648, 0.016693164428179887, 0.98826, 0.652325, 0.211364, 0.016775002666299454, 0.989128, 0.658043, 0.2081, 0.016856820037963606, 0.989935, 0.663787, 0.204859, 0.01693865827608317, 0.990681, 0.669558, 0.201642, 0.017020475647747325, 0.991365, 0.675355, 0.198453, 0.01710231388586689, 0.991985, 0.681179, 0.195295, 0.017184131257531043, 0.992541, 0.68703, 0.19217, 0.017265969495650613, 0.993032, 0.692907, 0.189084, 0.017347807733770176, 0.993456, 0.69881, 0.186041, 0.01742962510543433, 0.993814, 0.704741, 0.183043, 0.017511463343553895, 0.994103, 0.710698, 0.180097, 0.01759328071521805, 0.994324, 0.716681, 0.177208, 0.017675118953337614, 0.994474, 0.722691, 0.174381, 0.01775693632500177, 0.994553, 0.728728, 0.171622, 0.017838774563121336, 0.994561, 0.734791, 0.168938, 0.0179206128012409, 0.994495, 0.74088, 0.166335, 0.018002430172905055, 0.994355, 0.746995, 0.163821, 0.018084268411024618, 0.994141, 0.753137, 0.161404, 0.018166085782688773, 0.993851, 0.759304, 0.159092, 0.01824792402080834, 0.993482, 0.765499, 0.156891, 0.018329741392472492, 0.993033, 0.77172, 0.154808, 0.01841157963059206, 0.992505, 0.777967, 0.152855, 0.018493417868711625, 0.991897, 0.784239, 0.151042, 0.018575235240375777, 0.991209, 0.790537, 0.149377, 0.018657073478495344, 0.990439, 0.796859, 0.14787, 0.0187388908501595, 0.989587, 0.803205, 0.146529, 0.018820729088279062, 0.988648, 0.809579, 0.145357, 0.018902546459943218, 0.987621, 0.815978, 0.144363, 0.01898438469806278, 0.986509, 0.822401, 0.143557, 0.019066202069726937, 0.985314, 0.828846, 0.142945, 0.019148040307846503, 0.984031, 0.835315, 0.142528, 0.019229878545966066, 0.982653, 0.841812, 0.142303, 0.019311695917630222, 0.98119, 0.848329, 0.142279, 0.01939353415574979, 0.979644, 0.854866, 0.142453, 0.01947535152741394, 0.977995, 0.861432, 0.142808, 0.019557189765533507, 0.976265, 0.868016, 0.143351, 0.019639007137197663, 0.974443, 0.874622, 0.144061, 0.019720845375317226, 0.97253, 0.88125, 0.144923, 0.019802683613436792, 0.970533, 0.887896, 0.145919, 0.019884500985100948, 0.968443, 0.894564, 0.147014, 0.01996633922322051, 0.966271, 0.901249, 0.14818, 0.020048156594884667, 0.964021, 0.90795, 0.14937, 0.02012999483300423, 0.961681, 0.914672, 0.15052, 0.020211812204668386, 0.959276, 0.921407, 0.151566, 0.020293650442787952, 0.956808, 0.928152, 0.152409, 0.020375488680907515, 0.954287, 0.934908, 0.152921, 0.02045730605257167, 0.951726, 0.941671, 0.152925, 0.020539144290691237, 0.949151, 0.948435, 0.152178, 0.02062096166235539, 0.946602, 0.95519, 0.150328, 0.020702799900474952, 0.944152, 0.961916, 0.146861, 0.02078461727213911, 0.941896, 0.96859, 0.140956, 0.020866455510258675, 0.940015, 0.975158, 0.131326]
separate_ysliceDisplay_QVAPORLUT.NanColor = [0.0, 1.0, 0.0]
separate_ysliceDisplay_QVAPORLUT.ScalarRangeInitialized = 1.0

# trace defaults for the display properties.
ysliceDisplay.Representation = 'Surface'
ysliceDisplay.ColorArrayName = ['POINTS', 'QVAPOR']
ysliceDisplay.LookupTable = separate_ysliceDisplay_QVAPORLUT
ysliceDisplay.SelectTCoordArray = 'None'
ysliceDisplay.SelectNormalArray = 'None'
ysliceDisplay.SelectTangentArray = 'None'
ysliceDisplay.OSPRayScaleArray = 'QVAPOR'
ysliceDisplay.OSPRayScaleFunction = 'PiecewiseFunction'
ysliceDisplay.SelectOrientationVectors = 'None'
ysliceDisplay.ScaleFactor = 129.51652651379936
ysliceDisplay.SelectScaleArray = 'None'
ysliceDisplay.GlyphType = 'Arrow'
ysliceDisplay.GlyphTableIndexArray = 'None'
ysliceDisplay.GaussianRadius = 6.475826325689968
ysliceDisplay.SetScaleArray = ['POINTS', 'QVAPOR']
ysliceDisplay.ScaleTransferFunction = 'PiecewiseFunction'
ysliceDisplay.OpacityArray = ['POINTS', 'QVAPOR']
ysliceDisplay.OpacityTransferFunction = 'PiecewiseFunction'
ysliceDisplay.DataAxesGrid = 'GridAxesRepresentation'
ysliceDisplay.PolarAxes = 'PolarAxesRepresentation'
ysliceDisplay.SelectInputVectors = ['POINTS', '']
ysliceDisplay.WriteLog = ''

# init the 'PiecewiseFunction' selected for 'ScaleTransferFunction'
ysliceDisplay.ScaleTransferFunction.Points = [9.999998745735539e-11, 0.0, 0.5, 0.0, 0.020866455510258675, 1.0, 0.5, 0.0]

# init the 'PiecewiseFunction' selected for 'OpacityTransferFunction'
ysliceDisplay.OpacityTransferFunction.Points = [9.999998745735539e-11, 0.0, 0.5, 0.0, 0.020866455510258675, 1.0, 0.5, 0.0]

# set separate color map
ysliceDisplay.UseSeparateColorMap = True

# show data from xslice
xsliceDisplay = Show(xslice, renderView1, 'GeometryRepresentation')

# get 2D transfer function for 'QVAPOR'
qVAPORTF2D = GetTransferFunction2D('QVAPOR')
qVAPORTF2D.ScalarRangeInitialized = 1
qVAPORTF2D.Range = [6.751890171095842e-13, 0.025134146213531494, 0.0, 1.0]

# get color transfer function/color map for 'QVAPOR'
qVAPORLUT = GetColorTransferFunction('QVAPOR')
qVAPORLUT.TransferFunction2D = qVAPORTF2D
qVAPORLUT.RGBPoints = [9.354199750324495e-17, 0.050383, 0.029803, 0.527975, 9.85765305460431e-05, 0.063536, 0.028426, 0.533124, 0.000197127926841471, 0.075353, 0.027206, 0.538007, 0.0002957044573874206, 0.086222, 0.026125, 0.542658, 0.00039425585368284846, 0.096379, 0.025165, 0.547103, 0.0004928323842287981, 0.10598, 0.024309, 0.551368, 0.000591383780524226, 0.115124, 0.023556, 0.555468, 0.0006899603110701756, 0.123903, 0.022878, 0.559423, 0.000788536841616125, 0.132381, 0.022258, 0.56325, 0.000887088237911553, 0.140603, 0.021687, 0.566959, 0.0009856647684575025, 0.148607, 0.021154, 0.570562, 0.0010842161647529305, 0.156421, 0.020651, 0.574065, 0.0011827926952988799, 0.16407, 0.020171, 0.577478, 0.001281344091594308, 0.171574, 0.019706, 0.580806, 0.0013799206221402575, 0.17895, 0.019252, 0.584054, 0.001478497152686207, 0.186213, 0.018803, 0.587228, 0.0015770485489816348, 0.193374, 0.018354, 0.59033, 0.0016756250795275846, 0.200445, 0.017902, 0.593364, 0.0017741764758230124, 0.207435, 0.017442, 0.596333, 0.0018727530063689622, 0.21435, 0.016973, 0.599239, 0.0019713044026643902, 0.221197, 0.016497, 0.602083, 0.0020698809332103394, 0.227983, 0.016007, 0.604867, 0.0021684574637562894, 0.234715, 0.015502, 0.607592, 0.002267008860051717, 0.241396, 0.014979, 0.610259, 0.0023655853905976665, 0.248032, 0.014439, 0.612868, 0.0024641367868930945, 0.254627, 0.013882, 0.615419, 0.002562713317439044, 0.261183, 0.013308, 0.617911, 0.002661264713734472, 0.267703, 0.012716, 0.620346, 0.0027598412442804217, 0.274191, 0.012109, 0.622722, 0.0028583926405758497, 0.280648, 0.011488, 0.625038, 0.0029569691711217993, 0.287076, 0.010855, 0.627295, 0.0030555457016677484, 0.293478, 0.010213, 0.62949, 0.0031540970979631764, 0.299855, 0.009561, 0.631624, 0.003252673628509126, 0.30621, 0.008902, 0.633694, 0.0033512250248045545, 0.312543, 0.008239, 0.6357, 0.003449801555350503, 0.318856, 0.007576, 0.63764, 0.0035483529516459316, 0.32515, 0.006915, 0.639512, 0.003646929482191881, 0.331426, 0.006261, 0.641316, 0.003745506012737831, 0.337683, 0.005618, 0.643049, 0.0038440574090332583, 0.343925, 0.004991, 0.64471, 0.003942633939579208, 0.35015, 0.004382, 0.646298, 0.004041185335874636, 0.356359, 0.003798, 0.64781, 0.004139761866420585, 0.362553, 0.003243, 0.649245, 0.0042383132627160135, 0.368733, 0.002724, 0.650601, 0.004336889793261963, 0.374897, 0.002245, 0.651876, 0.004435466323807913, 0.381047, 0.001814, 0.653068, 0.00453401772010334, 0.387183, 0.001434, 0.654177, 0.004632594250649291, 0.393304, 0.001114, 0.655199, 0.004731145646944718, 0.399411, 0.000859, 0.656133, 0.004829722177490668, 0.405503, 0.000678, 0.656977, 0.004928273573786095, 0.41158, 0.000577, 0.65773, 0.005026850104332046, 0.417642, 0.000564, 0.65839, 0.0051254266348779946, 0.423689, 0.000646, 0.658956, 0.005223978031173423, 0.429719, 0.000831, 0.659425, 0.005322554561719373, 0.435734, 0.001127, 0.659797, 0.0054211059580148, 0.441732, 0.00154, 0.660069, 0.00551968248856075, 0.447714, 0.00208, 0.66024, 0.005618233884856177, 0.453677, 0.002755, 0.66031, 0.005716810415402127, 0.459623, 0.003574, 0.660277, 0.0058153869459480765, 0.46555, 0.004545, 0.660139, 0.005913938342243505, 0.471457, 0.005678, 0.659897, 0.0060125148727894545, 0.477344, 0.00698, 0.659549, 0.006111066269084882, 0.48321, 0.00846, 0.659095, 0.006209642799630832, 0.489055, 0.010127, 0.658534, 0.006308194195926259, 0.494877, 0.01199, 0.657865, 0.00640677072647221, 0.500678, 0.014055, 0.657088, 0.006505347257018158, 0.506454, 0.016333, 0.656202, 0.006603898653313587, 0.512206, 0.018833, 0.655209, 0.0067024751838595355, 0.517933, 0.021563, 0.654109, 0.006801026580154964, 0.523633, 0.024532, 0.652901, 0.006899603110700913, 0.529306, 0.027747, 0.651586, 0.006998154506996341, 0.534952, 0.031217, 0.650165, 0.0070967310375422915, 0.54057, 0.03495, 0.64864, 0.007195307568088241, 0.546157, 0.038954, 0.64701, 0.007293858964383669, 0.551715, 0.043136, 0.645277, 0.007392435494929618, 0.557243, 0.047331, 0.643443, 0.007490986891225046, 0.562738, 0.051545, 0.641509, 0.007589563421770995, 0.568201, 0.055778, 0.639477, 0.007688114818066423, 0.573632, 0.060028, 0.637349, 0.0077866913486123734, 0.579029, 0.064296, 0.635126, 0.007885242744907801, 0.584391, 0.068579, 0.632812, 0.007983819275453751, 0.589719, 0.072878, 0.630408, 0.0080823958059997, 0.595011, 0.07719, 0.627917, 0.008180947202295128, 0.600266, 0.081516, 0.625342, 0.008279523732841076, 0.605485, 0.085854, 0.622686, 0.008378075129136506, 0.610667, 0.090204, 0.619951, 0.008476651659682456, 0.615812, 0.094564, 0.61714, 0.008575203055977882, 0.620919, 0.098934, 0.614257, 0.008673779586523832, 0.625987, 0.103312, 0.611305, 0.008772356117069783, 0.631017, 0.107699, 0.608287, 0.00887090751336521, 0.636008, 0.112092, 0.605205, 0.00896948404391116, 0.640959, 0.116492, 0.602065, 0.009068035440206587, 0.645872, 0.120898, 0.598867, 0.009166611970752537, 0.650746, 0.125309, 0.595617, 0.009265163367047965, 0.65558, 0.129725, 0.592317, 0.009363739897593915, 0.660374, 0.134144, 0.588971, 0.009462316428139864, 0.665129, 0.138566, 0.585582, 0.009560867824435292, 0.669845, 0.142992, 0.582154, 0.009659444354981242, 0.674522, 0.147419, 0.578688, 0.00975799575127667, 0.67916, 0.151848, 0.575189, 0.009856572281822618, 0.683758, 0.156278, 0.57166, 0.009955123678118046, 0.688318, 0.160709, 0.568103, 0.010053700208663998, 0.69284, 0.165141, 0.564522, 0.010152276739209947, 0.697324, 0.169573, 0.560919, 0.010250828135505374, 0.701769, 0.174005, 0.557296, 0.010349404666051323, 0.706178, 0.178437, 0.553657, 0.010447956062346752, 0.710549, 0.182868, 0.550004, 0.010546532592892701, 0.714883, 0.187299, 0.546338, 0.010645083989188129, 0.719181, 0.191729, 0.542663, 0.010743660519734079, 0.723444, 0.196158, 0.538981, 0.010842237050280028, 0.72767, 0.200586, 0.535293, 0.010940788446575457, 0.731862, 0.205013, 0.531601, 0.011039364977121406, 0.736019, 0.209439, 0.527908, 0.011137916373416833, 0.740143, 0.213864, 0.524216, 0.011236492903962782, 0.744232, 0.218288, 0.520524, 0.011335044300258211, 0.748289, 0.222711, 0.516834, 0.01143362083080416, 0.752312, 0.227133, 0.513149, 0.01153219736135011, 0.756304, 0.231555, 0.509468, 0.011630748757645538, 0.760264, 0.235976, 0.505794, 0.011729325288191487, 0.764193, 0.240396, 0.502126, 0.011827876684486916, 0.76809, 0.244817, 0.498465, 0.011926453215032865, 0.771958, 0.249237, 0.494813, 0.012025004611328292, 0.775796, 0.253658, 0.491171, 0.012123581141874243, 0.779604, 0.258078, 0.487539, 0.012222157672420193, 0.783383, 0.2625, 0.483918, 0.012320709068715621, 0.787133, 0.266922, 0.480307, 0.01241928559926157, 0.790855, 0.271345, 0.476706, 0.012517836995556997, 0.794549, 0.27577, 0.473117, 0.012616413526102948, 0.798216, 0.280197, 0.469538, 0.012714964922398377, 0.801855, 0.284626, 0.465971, 0.012813541452944326, 0.805467, 0.289057, 0.462415, 0.012912092849239751, 0.809052, 0.293491, 0.45887, 0.013010669379785702, 0.812612, 0.297928, 0.455338, 0.01310924591033165, 0.816144, 0.302368, 0.451816, 0.01320779730662708, 0.819651, 0.306812, 0.448306, 0.013306373837173029, 0.823132, 0.311261, 0.444806, 0.013404925233468456, 0.826588, 0.315714, 0.441316, 0.013503501764014408, 0.830018, 0.320172, 0.437836, 0.013602053160309834, 0.833422, 0.324635, 0.434366, 0.013700629690855783, 0.836801, 0.329105, 0.430905, 0.013799206221401732, 0.840155, 0.33358, 0.427455, 0.013897757617697163, 0.843484, 0.338062, 0.424013, 0.013996334148243111, 0.846788, 0.342551, 0.420579, 0.014094885544538537, 0.850066, 0.347048, 0.417153, 0.01419346207508449, 0.853319, 0.351553, 0.413734, 0.014292013471379917, 0.856547, 0.356066, 0.410322, 0.014390590001925866, 0.85975, 0.360588, 0.406917, 0.014489166532471814, 0.862927, 0.365119, 0.403519, 0.014587717928767244, 0.866078, 0.36966, 0.400126, 0.014686294459313192, 0.869203, 0.374212, 0.396738, 0.01478484585560862, 0.872303, 0.378774, 0.393355, 0.014883422386154572, 0.875376, 0.383347, 0.389976, 0.014981973782449998, 0.878423, 0.387932, 0.3866, 0.015080550312995947, 0.881443, 0.392529, 0.383229, 0.015179126843541897, 0.884436, 0.397139, 0.37986, 0.015277678239837326, 0.887402, 0.401762, 0.376494, 0.015376254770383275, 0.89034, 0.406398, 0.37313, 0.015474806166678703, 0.89325, 0.411048, 0.369768, 0.015573382697224653, 0.896131, 0.415712, 0.366407, 0.01567193409352008, 0.898984, 0.420392, 0.363047, 0.01577051062406603, 0.901807, 0.425087, 0.359688, 0.01586908715461198, 0.904601, 0.429797, 0.356329, 0.01596763855090741, 0.907365, 0.434524, 0.35297, 0.016066215081453356, 0.910098, 0.439268, 0.34961, 0.016164766477748786, 0.9128, 0.444029, 0.346251, 0.016263343008294736, 0.915471, 0.448807, 0.34289, 0.016361894404590162, 0.918109, 0.453603, 0.339529, 0.016460470935136112, 0.920714, 0.458417, 0.336166, 0.01655904746568206, 0.923287, 0.463251, 0.332801, 0.016657598861977492, 0.925825, 0.468103, 0.329435, 0.01675617539252344, 0.928329, 0.472975, 0.326067, 0.016854726788818865, 0.930798, 0.477867, 0.322697, 0.01695330331936482, 0.933232, 0.48278, 0.319325, 0.017051854715660245, 0.93563, 0.487712, 0.315952, 0.017150431246206195, 0.93799, 0.492667, 0.312575, 0.017249007776752142, 0.940313, 0.497642, 0.309197, 0.01734755917304757, 0.942598, 0.502639, 0.305816, 0.017446135703593522, 0.944844, 0.507658, 0.302433, 0.017544687099888948, 0.947051, 0.512699, 0.299049, 0.017643263630434898, 0.949217, 0.517763, 0.295662, 0.017741815026730327, 0.951344, 0.52285, 0.292275, 0.017840391557276274, 0.953428, 0.52796, 0.288883, 0.017938942953571707, 0.95547, 0.533093, 0.28549, 0.018037519484117654, 0.957469, 0.53825, 0.282096, 0.018136096014663605, 0.959424, 0.543431, 0.278701, 0.01823464741095903, 0.961336, 0.548636, 0.275305, 0.01833322394150498, 0.963203, 0.553865, 0.271909, 0.01843177533780041, 0.965024, 0.559118, 0.268513, 0.018530351868346357, 0.966798, 0.564396, 0.265118, 0.018628903264641786, 0.968526, 0.5697, 0.261721, 0.018727479795187737, 0.970205, 0.575028, 0.258325, 0.018826056325733687, 0.971835, 0.580382, 0.254931, 0.018924607722029113, 0.973416, 0.585761, 0.25154, 0.01902318425257506, 0.974947, 0.591165, 0.248151, 0.01912173564887049, 0.976428, 0.596595, 0.244767, 0.01922031217941644, 0.977856, 0.602051, 0.241387, 0.019318863575711866, 0.979233, 0.607532, 0.238013, 0.01941744010625782, 0.980556, 0.613039, 0.234646, 0.019516016636803767, 0.981826, 0.618572, 0.231287, 0.019614568033099196, 0.983041, 0.624131, 0.227937, 0.019713144563645143, 0.984199, 0.629718, 0.224595, 0.019811695959940572, 0.985301, 0.63533, 0.221265, 0.019910272490486523, 0.986345, 0.640969, 0.217948, 0.02000882388678195, 0.987332, 0.646633, 0.214648, 0.020107400417327902, 0.98826, 0.652325, 0.211364, 0.02020597694787385, 0.989128, 0.658043, 0.2081, 0.020304528344169275, 0.989935, 0.663787, 0.204859, 0.020403104874715226, 0.990681, 0.669558, 0.201642, 0.020501656271010655, 0.991365, 0.675355, 0.198453, 0.020600232801556605, 0.991985, 0.681179, 0.195295, 0.02069878419785203, 0.992541, 0.68703, 0.19217, 0.02079736072839798, 0.993032, 0.692907, 0.189084, 0.020895937258943932, 0.993456, 0.69881, 0.186041, 0.020994488655239358, 0.993814, 0.704741, 0.183043, 0.02109306518578531, 0.994103, 0.710698, 0.180097, 0.021191616582080738, 0.994324, 0.716681, 0.177208, 0.021290193112626685, 0.994474, 0.722691, 0.174381, 0.021388744508922114, 0.994553, 0.728728, 0.171622, 0.021487321039468064, 0.994561, 0.734791, 0.168938, 0.021585897570014015, 0.994495, 0.74088, 0.166335, 0.02168444896630944, 0.994355, 0.746995, 0.163821, 0.02178302549685539, 0.994141, 0.753137, 0.161404, 0.02188157689315082, 0.993851, 0.759304, 0.159092, 0.021980153423696767, 0.993482, 0.765499, 0.156891, 0.022078704819992197, 0.993033, 0.77172, 0.154808, 0.022177281350538147, 0.992505, 0.777967, 0.152855, 0.022275857881084098, 0.991897, 0.784239, 0.151042, 0.022374409277379523, 0.991209, 0.790537, 0.149377, 0.02247298580792547, 0.990439, 0.796859, 0.14787, 0.0225715372042209, 0.989587, 0.803205, 0.146529, 0.02267011373476685, 0.988648, 0.809579, 0.145357, 0.022768665131062276, 0.987621, 0.815978, 0.144363, 0.022867241661608226, 0.986509, 0.822401, 0.143557, 0.022965793057903656, 0.985314, 0.828846, 0.142945, 0.023064369588449606, 0.984031, 0.835315, 0.142528, 0.023162946118995553, 0.982653, 0.841812, 0.142303, 0.023261497515290983, 0.98119, 0.848329, 0.142279, 0.023360074045836933, 0.979644, 0.854866, 0.142453, 0.02345862544213236, 0.977995, 0.861432, 0.142808, 0.02355720197267831, 0.976265, 0.868016, 0.143351, 0.02365575336897374, 0.974443, 0.874622, 0.144061, 0.023754329899519686, 0.97253, 0.88125, 0.144923, 0.023852906430065636, 0.970533, 0.887896, 0.145919, 0.023951457826361065, 0.968443, 0.894564, 0.147014, 0.024050034356907016, 0.966271, 0.901249, 0.14818, 0.02414858575320244, 0.964021, 0.90795, 0.14937, 0.024247162283748392, 0.961681, 0.914672, 0.15052, 0.02434571368004382, 0.959276, 0.921407, 0.151566, 0.02444429021058977, 0.956808, 0.928152, 0.152409, 0.02454286674113572, 0.954287, 0.934908, 0.152921, 0.024641418137431148, 0.951726, 0.941671, 0.152925, 0.024739994667977095, 0.949151, 0.948435, 0.152178, 0.024838546064272524, 0.946602, 0.95519, 0.150328, 0.02493712259481847, 0.944152, 0.961916, 0.146861, 0.0250356739911139, 0.941896, 0.96859, 0.140956, 0.02513425052165985, 0.940015, 0.975158, 0.131326]
qVAPORLUT.NanColor = [0.0, 1.0, 0.0]
qVAPORLUT.ScalarRangeInitialized = 1.0

# trace defaults for the display properties.
xsliceDisplay.Representation = 'Surface'
xsliceDisplay.ColorArrayName = ['POINTS', 'QVAPOR']
xsliceDisplay.LookupTable = qVAPORLUT
xsliceDisplay.SelectTCoordArray = 'None'
xsliceDisplay.SelectNormalArray = 'None'
xsliceDisplay.SelectTangentArray = 'None'
xsliceDisplay.OSPRayScaleArray = 'HGT'
xsliceDisplay.OSPRayScaleFunction = 'PiecewiseFunction'
xsliceDisplay.SelectOrientationVectors = 'None'
xsliceDisplay.ScaleFactor = -0.2
xsliceDisplay.SelectScaleArray = 'None'
xsliceDisplay.GlyphType = 'Arrow'
xsliceDisplay.GlyphTableIndexArray = 'None'
xsliceDisplay.GaussianRadius = -0.01
xsliceDisplay.SetScaleArray = ['POINTS', '']
xsliceDisplay.ScaleTransferFunction = 'PiecewiseFunction'
xsliceDisplay.OpacityArray = ['POINTS', '']
xsliceDisplay.OpacityTransferFunction = 'PiecewiseFunction'
xsliceDisplay.DataAxesGrid = 'GridAxesRepresentation'
xsliceDisplay.PolarAxes = 'PolarAxesRepresentation'
xsliceDisplay.SelectInputVectors = ['POINTS', '']
xsliceDisplay.WriteLog = ''

# init the 'PiecewiseFunction' selected for 'ScaleTransferFunction'
xsliceDisplay.ScaleTransferFunction.Points = [0.0, 0.0, 0.5, 0.0, 1.1757813367477812e-38, 1.0, 0.5, 0.0]

# init the 'PiecewiseFunction' selected for 'OpacityTransferFunction'
xsliceDisplay.OpacityTransferFunction.Points = [0.0, 0.0, 0.5, 0.0, 1.1757813367477812e-38, 1.0, 0.5, 0.0]

# show data from staticgeometry
staticgeometryDisplay = Show(staticgeometry, renderView1, 'GeometryRepresentation')

# get 2D transfer function for 'HGT'
hGTTF2D = GetTransferFunction2D('HGT')
hGTTF2D.ScalarRangeInitialized = 1
hGTTF2D.Range = [-1.1920928955078125e-07, 2371.900390625, -1.1920928955078125e-07, 2371.900390625]

# get color transfer function/color map for 'HGT'
hGTLUT = GetColorTransferFunction('HGT')
hGTLUT.TransferFunction2D = hGTTF2D
hGTLUT.RGBPoints = [-1.1920928955078125e-07, 0.2823529411764706, 0.396078431372549, 0.611764705882353, 11.042365546597642, 0.5764705882352941, 0.5137254901960784, 0.47843137254901963, 2371.900390625, 0.12156862745098039, 0.12156862745098039, 0.12156862745098039]
hGTLUT.ColorSpace = 'RGB'
hGTLUT.ScalarRangeInitialized = 1.0

# trace defaults for the display properties.
staticgeometryDisplay.Representation = 'Surface'
staticgeometryDisplay.ColorArrayName = ['POINTS', 'HGT']
staticgeometryDisplay.LookupTable = hGTLUT
staticgeometryDisplay.SelectTCoordArray = 'None'
staticgeometryDisplay.SelectNormalArray = 'None'
staticgeometryDisplay.SelectTangentArray = 'None'
staticgeometryDisplay.OSPRayScaleArray = 'HGT'
staticgeometryDisplay.OSPRayScaleFunction = 'PiecewiseFunction'
staticgeometryDisplay.SelectOrientationVectors = 'None'
staticgeometryDisplay.ScaleFactor = 224.0
staticgeometryDisplay.SelectScaleArray = 'HGT'
staticgeometryDisplay.GlyphType = 'Arrow'
staticgeometryDisplay.GlyphTableIndexArray = 'HGT'
staticgeometryDisplay.GaussianRadius = 11.200000000000001
staticgeometryDisplay.SetScaleArray = ['POINTS', 'HGT']
staticgeometryDisplay.ScaleTransferFunction = 'PiecewiseFunction'
staticgeometryDisplay.OpacityArray = ['POINTS', 'HGT']
staticgeometryDisplay.OpacityTransferFunction = 'PiecewiseFunction'
staticgeometryDisplay.DataAxesGrid = 'GridAxesRepresentation'
staticgeometryDisplay.PolarAxes = 'PolarAxesRepresentation'
staticgeometryDisplay.SelectInputVectors = ['POINTS', '']
staticgeometryDisplay.WriteLog = ''

# init the 'PiecewiseFunction' selected for 'ScaleTransferFunction'
staticgeometryDisplay.ScaleTransferFunction.Points = [-1.1920809583898517e-07, 0.0, 0.5, 0.0, 2371.876708984375, 1.0, 0.5, 0.0]

# init the 'PiecewiseFunction' selected for 'OpacityTransferFunction'
staticgeometryDisplay.OpacityTransferFunction.Points = [-1.1920809583898517e-07, 0.0, 0.5, 0.0, 2371.876708984375, 1.0, 0.5, 0.0]

# show data from resampleToImageqrain
resampleToImageqrainDisplay = Show(resampleToImageqrain, renderView1, 'UniformGridRepresentation')

# get 2D transfer function for 'QRAIN'
qRAINTF2D = GetTransferFunction2D('QRAIN')
qRAINTF2D.ScalarRangeInitialized = 1
qRAINTF2D.Range = [-6.186115394891598e-14, 0.015552936121821404, 0.0, 1.0]

# get color transfer function/color map for 'QRAIN'
qRAINLUT = GetColorTransferFunction('QRAIN')
qRAINLUT.TransferFunction2D = qRAINTF2D
qRAINLUT.RGBPoints = [-3.5065891162977536e-12, 0.278431372549, 0.278431372549, 0.858823529412, 0.0024731316126633883, 0.0, 0.0, 0.360784313725, 0.0049289686021468625, 0.0, 1.0, 1.0, 0.0074193948450033435, 0.0, 0.501960784314, 0.0, 0.009875231834486818, 1.0, 1.0, 0.0, 0.012348363450656796, 1.0, 0.380392156863, 0.0, 0.014821495066826774, 0.419607843137, 0.0, 0.0, 0.01729462668299675, 0.878431372549, 0.301960784314, 0.301960784314]
qRAINLUT.AutomaticDataHistogramComputation = 1
qRAINLUT.DataHistogramNumberOfBins = 55
qRAINLUT.ColorSpace = 'RGB'
qRAINLUT.ScalarRangeInitialized = 1.0

# get opacity transfer function/opacity map for 'QRAIN'
qRAINPWF = GetOpacityTransferFunction('QRAIN')
qRAINPWF.Points = [-3.5065891162977536e-12, 0.0, 0.5, 0.0, 0.0013158955844119191, 0.5, 0.5, 0.0, 0.00492520909756422, 1.0, 0.5, 0.0, 0.01729462668299675, 1.0, 0.5, 0.0]
qRAINPWF.ScalarRangeInitialized = 1

# trace defaults for the display properties.
resampleToImageqrainDisplay.Representation = 'Volume'
resampleToImageqrainDisplay.ColorArrayName = ['POINTS', 'QRAIN']
resampleToImageqrainDisplay.LookupTable = qRAINLUT
resampleToImageqrainDisplay.SelectTCoordArray = 'None'
resampleToImageqrainDisplay.SelectNormalArray = 'None'
resampleToImageqrainDisplay.SelectTangentArray = 'None'
resampleToImageqrainDisplay.OSPRayScaleArray = 'HGT'
resampleToImageqrainDisplay.OSPRayScaleFunction = 'PiecewiseFunction'
resampleToImageqrainDisplay.SelectOrientationVectors = 'None'
resampleToImageqrainDisplay.ScaleFactor = 223.99977600000003
resampleToImageqrainDisplay.SelectScaleArray = 'HGT'
resampleToImageqrainDisplay.GlyphType = 'Arrow'
resampleToImageqrainDisplay.GlyphTableIndexArray = 'HGT'
resampleToImageqrainDisplay.GaussianRadius = 11.199988800000002
resampleToImageqrainDisplay.SetScaleArray = ['POINTS', 'HGT']
resampleToImageqrainDisplay.ScaleTransferFunction = 'PiecewiseFunction'
resampleToImageqrainDisplay.OpacityArray = ['POINTS', 'HGT']
resampleToImageqrainDisplay.OpacityTransferFunction = 'PiecewiseFunction'
resampleToImageqrainDisplay.DataAxesGrid = 'GridAxesRepresentation'
resampleToImageqrainDisplay.PolarAxes = 'PolarAxesRepresentation'
resampleToImageqrainDisplay.ScalarOpacityUnitDistance = 4.170540098882417
resampleToImageqrainDisplay.ScalarOpacityFunction = qRAINPWF
resampleToImageqrainDisplay.TransferFunction2D = qRAINTF2D
resampleToImageqrainDisplay.OpacityArrayName = ['POINTS', 'HGT']
resampleToImageqrainDisplay.ColorArray2Name = ['POINTS', 'HGT']
resampleToImageqrainDisplay.Shade = 1
resampleToImageqrainDisplay.SliceFunction = 'Plane'
resampleToImageqrainDisplay.Slice = 44
resampleToImageqrainDisplay.SelectInputVectors = ['POINTS', '']
resampleToImageqrainDisplay.WriteLog = ''

# init the 'PiecewiseFunction' selected for 'ScaleTransferFunction'
resampleToImageqrainDisplay.ScaleTransferFunction.Points = [-1.979196007084738e-08, 0.0, 0.5, 0.0, 2352.196533203125, 1.0, 0.5, 0.0]

# init the 'PiecewiseFunction' selected for 'OpacityTransferFunction'
resampleToImageqrainDisplay.OpacityTransferFunction.Points = [-1.979196007084738e-08, 0.0, 0.5, 0.0, 2352.196533203125, 1.0, 0.5, 0.0]

# init the 'Plane' selected for 'SliceFunction'
resampleToImageqrainDisplay.SliceFunction.Origin = [1120.0, 752.4999999999998, 356.0]

# show data from resampleToImageqice
resampleToImageqiceDisplay = Show(resampleToImageqice, renderView1, 'UniformGridRepresentation')

# get 2D transfer function for 'QICE'
qICETF2D = GetTransferFunction2D('QICE')
qICETF2D.ScalarRangeInitialized = 1
qICETF2D.Range = [-5.017114848232334e-16, 0.0010455967858433723, 0.0, 1.0]

# get color transfer function/color map for 'QICE'
qICELUT = GetColorTransferFunction('QICE')
qICELUT.TransferFunction2D = qICETF2D
qICELUT.RGBPoints = [-5.017114848232334e-16, 1.0, 1.0, 1.0, 0.0010455967858433723, 1.0, 1.0, 1.0]
qICELUT.ScalarRangeInitialized = 1.0

# get opacity transfer function/opacity map for 'QICE'
qICEPWF = GetOpacityTransferFunction('QICE')
qICEPWF.Points = [-5.017114848232334e-16, 0.0, 0.5, 0.0, 0.0, 0.009, 0.5, 0.0, 0.0010455967858433723, 0.65, 0.5, 0.0]
qICEPWF.ScalarRangeInitialized = 1

# trace defaults for the display properties.
resampleToImageqiceDisplay.Representation = 'Volume'
resampleToImageqiceDisplay.ColorArrayName = ['POINTS', 'QICE']
resampleToImageqiceDisplay.LookupTable = qICELUT
resampleToImageqiceDisplay.SelectTCoordArray = 'None'
resampleToImageqiceDisplay.SelectNormalArray = 'None'
resampleToImageqiceDisplay.SelectTangentArray = 'None'
resampleToImageqiceDisplay.OSPRayScaleArray = 'HGT'
resampleToImageqiceDisplay.OSPRayScaleFunction = 'PiecewiseFunction'
resampleToImageqiceDisplay.SelectOrientationVectors = 'None'
resampleToImageqiceDisplay.ScaleFactor = 223.99977600000003
resampleToImageqiceDisplay.SelectScaleArray = 'HGT'
resampleToImageqiceDisplay.GlyphType = 'Arrow'
resampleToImageqiceDisplay.GlyphTableIndexArray = 'HGT'
resampleToImageqiceDisplay.GaussianRadius = 11.199988800000002
resampleToImageqiceDisplay.SetScaleArray = ['POINTS', 'HGT']
resampleToImageqiceDisplay.ScaleTransferFunction = 'PiecewiseFunction'
resampleToImageqiceDisplay.OpacityArray = ['POINTS', 'HGT']
resampleToImageqiceDisplay.OpacityTransferFunction = 'PiecewiseFunction'
resampleToImageqiceDisplay.DataAxesGrid = 'GridAxesRepresentation'
resampleToImageqiceDisplay.PolarAxes = 'PolarAxesRepresentation'
resampleToImageqiceDisplay.ScalarOpacityUnitDistance = 4.170540098882417
resampleToImageqiceDisplay.ScalarOpacityFunction = qICEPWF
resampleToImageqiceDisplay.TransferFunction2D = qICETF2D
resampleToImageqiceDisplay.OpacityArrayName = ['POINTS', 'HGT']
resampleToImageqiceDisplay.ColorArray2Name = ['POINTS', 'HGT']
resampleToImageqiceDisplay.SliceFunction = 'Plane'
resampleToImageqiceDisplay.Slice = 44
resampleToImageqiceDisplay.SelectInputVectors = ['POINTS', '']
resampleToImageqiceDisplay.WriteLog = ''
resampleToImageqiceDisplay.Shade = 1

# init the 'PiecewiseFunction' selected for 'ScaleTransferFunction'
resampleToImageqiceDisplay.ScaleTransferFunction.Points = [-1.979196007084738e-08, 0.0, 0.5, 0.0, 2352.196533203125, 1.0, 0.5, 0.0]

# init the 'PiecewiseFunction' selected for 'OpacityTransferFunction'
resampleToImageqiceDisplay.OpacityTransferFunction.Points = [-1.979196007084738e-08, 0.0, 0.5, 0.0, 2352.196533203125, 1.0, 0.5, 0.0]

# init the 'Plane' selected for 'SliceFunction'
resampleToImageqiceDisplay.SliceFunction.Origin = [1120.0, 752.4999999999998, 356.0]

# show data from extractSubset1surfacelic
extractSubset1surfacelicDisplay = Show(extractSubset1surfacelic, renderView1, 'StructuredGridRepresentation')

# get 2D transfer function for 'wrf_vec'
wrf_vecTF2D = GetTransferFunction2D('wrf_vec')

# get color transfer function/color map for 'wrf_vec'
wrf_vecLUT = GetColorTransferFunction('wrf_vec')
wrf_vecLUT.TransferFunction2D = wrf_vecTF2D
wrf_vecLUT.RGBPoints = [0.005851329907969462, 0.0, 0.407843, 0.215686, 4.1393307930341745, 0.063975, 0.525952, 0.277201, 8.27281025616038, 0.177932, 0.633064, 0.332718, 12.406322658002525, 0.364937, 0.724106, 0.379469, 16.53980212112873, 0.527951, 0.797155, 0.40223, 20.673281584254937, 0.678431, 0.862822, 0.433449, 24.80676104738114, 0.803922, 0.916955, 0.514648, 28.940240510507348, 0.909419, 0.961861, 0.625067, 33.073738748701636, 0.999923, 0.997616, 0.745021, 37.2072323754757, 0.997463, 0.921338, 0.61707, 41.340711838601905, 0.995002, 0.824606, 0.499885, 45.47419130172811, 0.992541, 0.701576, 0.39654, 49.60767076485432, 0.973472, 0.547405, 0.318108, 53.74118316669646, 0.939023, 0.389927, 0.245521, 57.874662629822666, 0.867666, 0.239831, 0.176624, 62.00814209294888, 0.762399, 0.110727, 0.151326, 65.88328320696918, 0.647059, 0.0, 0.14902]
wrf_vecLUT.ColorSpace = 'Lab'
wrf_vecLUT.ScalarRangeInitialized = 1.0

# get opacity transfer function/opacity map for 'wrf_vec'
wrf_vecPWF = GetOpacityTransferFunction('wrf_vec')
wrf_vecPWF.Points = [0.005851329907969462, 0.0, 0.5, 0.0, 65.88328320696918, 1.0, 0.5, 0.0]
wrf_vecPWF.ScalarRangeInitialized = 1

# trace defaults for the display properties.
extractSubset1surfacelicDisplay.Representation = 'Surface LIC'
extractSubset1surfacelicDisplay.ColorArrayName = ['POINTS', 'wrf_vec']
extractSubset1surfacelicDisplay.LookupTable = wrf_vecLUT
extractSubset1surfacelicDisplay.SelectTCoordArray = 'None'
extractSubset1surfacelicDisplay.SelectNormalArray = 'None'
extractSubset1surfacelicDisplay.SelectTangentArray = 'None'
extractSubset1surfacelicDisplay.OSPRayScaleArray = 'HGT'
extractSubset1surfacelicDisplay.OSPRayScaleFunction = 'PiecewiseFunction'
extractSubset1surfacelicDisplay.SelectOrientationVectors = 'wrf_vec'
extractSubset1surfacelicDisplay.ScaleFactor = 224.0
extractSubset1surfacelicDisplay.SelectScaleArray = 'HGT'
extractSubset1surfacelicDisplay.GlyphType = 'Arrow'
extractSubset1surfacelicDisplay.GlyphTableIndexArray = 'HGT'
extractSubset1surfacelicDisplay.GaussianRadius = 11.200000000000001
extractSubset1surfacelicDisplay.SetScaleArray = ['POINTS', 'HGT']
extractSubset1surfacelicDisplay.ScaleTransferFunction = 'PiecewiseFunction'
extractSubset1surfacelicDisplay.OpacityArray = ['POINTS', 'HGT']
extractSubset1surfacelicDisplay.OpacityTransferFunction = 'PiecewiseFunction'
extractSubset1surfacelicDisplay.DataAxesGrid = 'GridAxesRepresentation'
extractSubset1surfacelicDisplay.PolarAxes = 'PolarAxesRepresentation'
extractSubset1surfacelicDisplay.ScalarOpacityFunction = wrf_vecPWF
extractSubset1surfacelicDisplay.ScalarOpacityUnitDistance = 17.99764996803036
extractSubset1surfacelicDisplay.SelectInputVectors = ['POINTS', 'wrf_vec']
extractSubset1surfacelicDisplay.NumberOfSteps = 100
extractSubset1surfacelicDisplay.EnhanceContrast = 'LIC and Color'
extractSubset1surfacelicDisplay.WriteLog = ''

# init the 'PiecewiseFunction' selected for 'ScaleTransferFunction'
extractSubset1surfacelicDisplay.ScaleTransferFunction.Points = [-1.1920928955078125e-07, 0.0, 0.5, 0.0, 2371.900390625, 1.0, 0.5, 0.0]

# init the 'PiecewiseFunction' selected for 'OpacityTransferFunction'
extractSubset1surfacelicDisplay.OpacityTransferFunction.Points = [-1.1920928955078125e-07, 0.0, 0.5, 0.0, 2371.900390625, 1.0, 0.5, 0.0]

# show data from transform2
transform2Display = Show(transform2, renderView1, 'GeometryRepresentation')

# trace defaults for the display properties.
transform2Display.Representation = 'Surface'
transform2Display.ColorArrayName = ['POINTS', 'wrf_vec']
transform2Display.LookupTable = wrf_vecLUT
transform2Display.SelectTCoordArray = 'None'
transform2Display.SelectNormalArray = 'None'
transform2Display.SelectTangentArray = 'None'
transform2Display.OSPRayScaleArray = 'HGT'
transform2Display.OSPRayScaleFunction = 'PiecewiseFunction'
transform2Display.SelectOrientationVectors = 'wrf_vec'
transform2Display.ScaleFactor = 229.25966415405276
transform2Display.SelectScaleArray = 'HGT'
transform2Display.GlyphType = 'Arrow'
transform2Display.GlyphTableIndexArray = 'HGT'
transform2Display.GaussianRadius = 11.462983207702637
transform2Display.SetScaleArray = ['POINTS', 'HGT']
transform2Display.ScaleTransferFunction = 'PiecewiseFunction'
transform2Display.OpacityArray = ['POINTS', 'HGT']
transform2Display.OpacityTransferFunction = 'PiecewiseFunction'
transform2Display.DataAxesGrid = 'GridAxesRepresentation'
transform2Display.PolarAxes = 'PolarAxesRepresentation'
transform2Display.SelectInputVectors = ['POINTS', 'wrf_vec']
transform2Display.WriteLog = ''

# init the 'PiecewiseFunction' selected for 'ScaleTransferFunction'
transform2Display.ScaleTransferFunction.Points = [0.0, 0.0, 0.5, 0.0, 1937.02392578125, 1.0, 0.5, 0.0]

# init the 'PiecewiseFunction' selected for 'OpacityTransferFunction'
transform2Display.OpacityTransferFunction.Points = [0.0, 0.0, 0.5, 0.0, 1937.02392578125, 1.0, 0.5, 0.0]

# show data from transform3
transform3Display = Show(transform3, renderView1, 'UnstructuredGridRepresentation')

# get 2D transfer function for 'calculatedRain'
calculatedRainTF2D = GetTransferFunction2D('calculatedRain')

# get color transfer function/color map for 'calculatedRain'
calculatedRainLUT = GetColorTransferFunction('calculatedRain')
calculatedRainLUT.TransferFunction2D = calculatedRainTF2D
calculatedRainLUT.RGBPoints = [0.0, 1.0, 1.0, 0.988235, 0.09134975083007812, 1.0, 1.0, 0.988235, 2.2837437707519532, 0.984314, 0.988235, 0.843137, 4.5674875415039065, 0.988235, 0.988235, 0.741176, 6.851231312255859, 0.980392, 0.968627, 0.654902, 9.134975083007813, 0.980392, 0.945098, 0.576471, 11.418718853759765, 0.968627, 0.905882, 0.486275, 13.702462624511718, 0.968627, 0.862745, 0.388235, 15.98620639526367, 0.960784, 0.803922, 0.286275, 18.269950166015626, 0.94902, 0.741176, 0.219608, 20.553693936767576, 0.941176, 0.678431, 0.14902, 22.83743770751953, 0.929412, 0.607843, 0.094118, 25.121181478271485, 0.921569, 0.545098, 0.054902, 27.404925249023435, 0.909804, 0.486275, 0.035294, 29.68866901977539, 0.890196, 0.411765, 0.019608, 31.97241279052734, 0.8, 0.305882, 0.0, 34.2561565612793, 0.760784, 0.239216, 0.0, 36.53990033203125, 0.678431, 0.180392, 0.011765, 38.8236441027832, 0.6, 0.121569, 0.023529, 41.10738787353515, 0.501961, 0.054902, 0.031373, 43.39113164428711, 0.4, 0.039216, 0.058824, 45.67487541503906, 0.301961, 0.047059, 0.090196]
calculatedRainLUT.ColorSpace = 'Lab'
calculatedRainLUT.NanColor = [0.25, 0.0, 0.0]
calculatedRainLUT.ScalarRangeInitialized = 1.0

# get opacity transfer function/opacity map for 'calculatedRain'
calculatedRainPWF = GetOpacityTransferFunction('calculatedRain')
calculatedRainPWF.Points = [0.0, 0.0, 0.5, 0.0, 45.67487541503906, 1.0, 0.5, 0.0]
calculatedRainPWF.ScalarRangeInitialized = 1

# trace defaults for the display properties.
transform3Display.Representation = 'Surface'
transform3Display.ColorArrayName = ['POINTS', 'calculatedRain']
transform3Display.LookupTable = calculatedRainLUT
transform3Display.SelectTCoordArray = 'None'
transform3Display.SelectNormalArray = 'None'
transform3Display.SelectTangentArray = 'None'
transform3Display.OSPRayScaleArray = 'calculatedRain'
transform3Display.OSPRayScaleFunction = 'PiecewiseFunction'
transform3Display.SelectOrientationVectors = 'None'
transform3Display.ScaleFactor = 222.9
transform3Display.SelectScaleArray = 'calculatedRain'
transform3Display.GlyphType = 'Arrow'
transform3Display.GlyphTableIndexArray = 'calculatedRain'
transform3Display.GaussianRadius = 11.145
transform3Display.SetScaleArray = ['POINTS', 'calculatedRain']
transform3Display.ScaleTransferFunction = 'PiecewiseFunction'
transform3Display.OpacityArray = ['POINTS', 'calculatedRain']
transform3Display.OpacityTransferFunction = 'PiecewiseFunction'
transform3Display.DataAxesGrid = 'GridAxesRepresentation'
transform3Display.PolarAxes = 'PolarAxesRepresentation'
transform3Display.ScalarOpacityFunction = calculatedRainPWF
transform3Display.ScalarOpacityUnitDistance = 45.52666330596649
transform3Display.OpacityArrayName = ['POINTS', 'calculatedRain']
transform3Display.SelectInputVectors = ['POINTS', '']
transform3Display.WriteLog = ''

# init the 'PiecewiseFunction' selected for 'ScaleTransferFunction'
transform3Display.ScaleTransferFunction.Points = [0.10001136016845703, 0.0, 0.5, 0.0, 45.67487541503906, 1.0, 0.5, 0.0]

# init the 'PiecewiseFunction' selected for 'OpacityTransferFunction'
transform3Display.OpacityTransferFunction.Points = [0.10001136016845703, 0.0, 0.5, 0.0, 45.67487541503906, 1.0, 0.5, 0.0]

# setup the color legend parameters for each legend in this view

# get color legend/bar for qVAPORLUT in view renderView1
qVAPORLUTColorBar = GetScalarBar(qVAPORLUT, renderView1)
qVAPORLUTColorBar.AutoOrient = 0
qVAPORLUTColorBar.Orientation = 'Horizontal'
qVAPORLUTColorBar.WindowLocation = 'Any Location'
qVAPORLUTColorBar.Position = [0.44240531042561504, 0.1480086114101184]
qVAPORLUTColorBar.Title = 'QVAPOR'
qVAPORLUTColorBar.ComponentTitle = ''
qVAPORLUTColorBar.ScalarBarThickness = 25
qVAPORLUTColorBar.ScalarBarLength = 0.25

# set color bar visibility
qVAPORLUTColorBar.Visibility = 1

# get color legend/bar for qRAINLUT in view renderView1
qRAINLUTColorBar = GetScalarBar(qRAINLUT, renderView1)
qRAINLUTColorBar.AutoOrient = 0
qRAINLUTColorBar.Orientation = 'Horizontal'
qRAINLUTColorBar.WindowLocation = 'Any Location'
qRAINLUTColorBar.Position = [0.727887543928153, 0.0832292787944027]
qRAINLUTColorBar.Title = 'QRAIN'
qRAINLUTColorBar.ComponentTitle = ''
qRAINLUTColorBar.ScalarBarThickness = 25
qRAINLUTColorBar.ScalarBarLength = 0.24999999999999978

# set color bar visibility
qRAINLUTColorBar.Visibility = 1

# get color legend/bar for calculatedRainLUT in view renderView1
calculatedRainLUTColorBar = GetScalarBar(calculatedRainLUT, renderView1)
calculatedRainLUTColorBar.AutoOrient = 0
calculatedRainLUTColorBar.Orientation = 'Horizontal'
calculatedRainLUTColorBar.WindowLocation = 'Any Location'
calculatedRainLUTColorBar.Position = [0.728231159703241, 0.1480086114101184]
calculatedRainLUTColorBar.Title = 'calculatedRain'
calculatedRainLUTColorBar.ComponentTitle = ''
calculatedRainLUTColorBar.ScalarBarThickness = 25
calculatedRainLUTColorBar.ScalarBarLength = 0.25

# set color bar visibility
calculatedRainLUTColorBar.Visibility = 1

# get color legend/bar for qICELUT in view renderView1
qICELUTColorBar = GetScalarBar(qICELUT, renderView1)
qICELUTColorBar.AutoOrient = 0
qICELUTColorBar.Orientation = 'Horizontal'
qICELUTColorBar.WindowLocation = 'Any Location'
qICELUTColorBar.Position = [0.44323311206559923, 0.08430570505920344]
qICELUTColorBar.Title = 'QICE'
qICELUTColorBar.ComponentTitle = ''
qICELUTColorBar.ScalarBarThickness = 25
qICELUTColorBar.ScalarBarLength = 0.25

# set color bar visibility
qICELUTColorBar.Visibility = 1

# show color legend
xsliceDisplay.SetScalarBarVisibility(renderView1, True)

# show color legend
resampleToImageqrainDisplay.SetScalarBarVisibility(renderView1, True)

# show color legend
resampleToImageqiceDisplay.SetScalarBarVisibility(renderView1, True)

# show color legend
transform3Display.SetScalarBarVisibility(renderView1, True)

# ----------------------------------------------------------------
# setup color maps and opacity mapes used in the visualization
# note: the Get..() functions create a new object, if needed
# ----------------------------------------------------------------

# get opacity transfer function/opacity map for 'HGT'
hGTPWF = GetOpacityTransferFunction('HGT')
hGTPWF.Points = [-1.1920928955078125e-07, 0.0, 0.5, 0.0, 2371.900390625, 1.0, 0.5, 0.0]
hGTPWF.ScalarRangeInitialized = 1

# get opacity transfer function/opacity map for 'QVAPOR'
qVAPORPWF = GetOpacityTransferFunction('QVAPOR')
qVAPORPWF.Points = [9.354199750324495e-17, 0.0, 0.5, 0.0, 0.02513425052165985, 1.0, 0.5, 0.0]
qVAPORPWF.ScalarRangeInitialized = 1

# get separate opacity transfer function/opacity map for 'QVAPOR'
separate_ysliceDisplay_QVAPORPWF = GetOpacityTransferFunction('QVAPOR', ysliceDisplay, separate=True)
separate_ysliceDisplay_QVAPORPWF.Points = [9.986473453738043e-11, 0.0, 0.5, 0.0, 0.020866455510258675, 1.0, 0.5, 0.0]
separate_ysliceDisplay_QVAPORPWF.ScalarRangeInitialized = 1

# ----------------------------------------------------------------
# restore active source
SetActiveSource(transform3)
# ----------------------------------------------------------------

# create folder to store images
saveDir = script_dir + "/output"
try:
    os.mkdir(saveDir)
except FileExistsError:
    pass
# save screenshot
SaveScreenshot(script_dir + '/output/ex06.png', renderView1, ImageResolution=[4054, 2536])

print("\nFinished ParaView example script\n")
